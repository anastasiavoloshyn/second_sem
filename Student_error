#include <iostream>
#include <string>
#include <fstream>

using namespace std;

class ErrorClass {
private:
    string msg;
    int num;
public:
    ErrorClass(string msg, int num)
    {
        this->msg = msg;
        this->num = num;
    }
    string GetMsg()
    {
        return msg;
    }
    int GetNum()
    {
        return num;
    }
};

void fileError(ifstream& fin)
{
    if (!fin.is_open())
    {
        throw ErrorClass("could not open the file ", 3);
    }
}

class Student {
private:
    string name;
    string group;
    int* grade;
    int size;
public:
    Student(string name, string group, int* grade, int size)
    {
        this->name = name;
        this->group = group;
        this->grade = new int[size];
        for (int i = 0; i < size; ++i)
        {
            this->grade[i] = grade[i];
        }
        this->size = size;
    }

    ~Student()
    {
        delete[]grade;
    }

    int* GetGrade()
    {
        return grade;
    }

    friend ostream& operator<<(ostream& os, const Student& s)
    {
        os << "\nName:\n" << s.name << "\nGroup:\n" << s.group << "\nGrades:\n";
        for (int i = 0; i < s.size; ++i)
        {
            os << s.grade[i] << " ";
        }
        os << "\n";
        return os;
    }

    friend istream& operator>>(istream& is, Student& s)
    {
        is >> s.name >> s.group >> s.size;
        s.grade = new int[s.size];
        for (int i = 0; i < s.size; ++i)
        {
            is >> s.grade[i];
        }
        return is;
    }
};

int arithmeticalMean(int* arr, int size)
{
    int sum = 0;
    for (int i = 0; i < size; i++)
    {
        sum += arr[i];
    }
    sum = sum / size;
    return sum;
}

int* count_grades(string filename, int& size) {
    ifstream fin(filename);
    string name, group;
    int count = 0;
    while (fin >> name >> group) {
        int grade;
        while (fin >> grade) {
            count++;
        }
    }
    size = count;
    int* grades = new int[count];
    fin.close();

    fin.open(filename);
    int index = 0;
    while (fin >> name >> group) {
        int grade;
        while (fin >> grade) {
            grades[index] = grade;
            index++;
        }
    }
    fin.close();
    return grades;
}
int main()
{
    ifstream fin("info.txt");
    try
    {
        fileError(fin);
    }
    catch (ErrorClass er) {
        cout << "error:" << " " << er.GetMsg() << "error code:" << " " << er.GetNum() << "\n";
    }

    string name, group;
    int size;
    int* grades = count_grades("grades.txt", size);
    while (fin >> name >> group) {
        grades = new int[size];
        for (int i = 0; i < size; i++) {
            fin >> grades[i];
        }
        Student st(name, group, grades, size);
        cout << st;
    }

    fin.close();
}
